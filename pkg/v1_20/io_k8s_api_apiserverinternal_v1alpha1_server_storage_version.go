// Code generated by go-swagger; DO NOT EDIT.

package v1_20

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.
//
// swagger:model io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion
type IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion struct {

	// The ID of the reporting API server.
	APIServerID string `json:"apiServerID,omitempty"`

	// The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.
	DecodableVersions []string `json:"decodableVersions"`

	// The API server encodes the object to this version when persisting it in the backend (e.g., etcd).
	EncodingVersion string `json:"encodingVersion,omitempty"`
}

// Validate validates this io k8s api apiserverinternal v1alpha1 server storage version
func (m *IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this io k8s api apiserverinternal v1alpha1 server storage version based on context it is used
func (m *IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIApiserverinternalV1alpha1ServerStorageVersion
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
