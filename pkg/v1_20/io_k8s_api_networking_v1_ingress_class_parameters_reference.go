// Code generated by go-swagger; DO NOT EDIT.

package v1_20

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPINetworkingV1IngressClassParametersReference IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.
//
// swagger:model io.k8s.api.networking.v1.IngressClassParametersReference
type IoK8sAPINetworkingV1IngressClassParametersReference struct {

	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	APIGroup string `json:"apiGroup,omitempty"`

	// Kind is the type of resource being referenced.
	// Required: true
	Kind *string `json:"kind"`

	// Name is the name of resource being referenced.
	// Required: true
	Name *string `json:"name"`

	// Namespace is the namespace of the resource being referenced. This field is required when scope is set to "Namespace" and must be unset when scope is set to "Cluster".
	Namespace string `json:"namespace,omitempty"`

	// Scope represents if this refers to a cluster or namespace scoped resource. This may be set to "Cluster" (default) or "Namespace".
	Scope string `json:"scope,omitempty"`
}

// Validate validates this io k8s api networking v1 ingress class parameters reference
func (m *IoK8sAPINetworkingV1IngressClassParametersReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPINetworkingV1IngressClassParametersReference) validateKind(formats strfmt.Registry) error {

	if err := validate.Required("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

func (m *IoK8sAPINetworkingV1IngressClassParametersReference) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this io k8s api networking v1 ingress class parameters reference based on context it is used
func (m *IoK8sAPINetworkingV1IngressClassParametersReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPINetworkingV1IngressClassParametersReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPINetworkingV1IngressClassParametersReference) UnmarshalBinary(b []byte) error {
	var res IoK8sAPINetworkingV1IngressClassParametersReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
