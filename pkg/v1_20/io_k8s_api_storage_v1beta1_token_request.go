// Code generated by go-swagger; DO NOT EDIT.

package v1_20

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPIStorageV1beta1TokenRequest TokenRequest contains parameters of a service account token.
//
// swagger:model io.k8s.api.storage.v1beta1.TokenRequest
type IoK8sAPIStorageV1beta1TokenRequest struct {

	// Audience is the intended audience of the token in "TokenRequestSpec". It will default to the audiences of kube apiserver.
	// Required: true
	Audience *string `json:"audience" json,yaml:"audience"`

	// ExpirationSeconds is the duration of validity of the token in "TokenRequestSpec". It has the same default value of "ExpirationSeconds" in "TokenRequestSpec"
	ExpirationSeconds int64 `json:"expirationSeconds,omitempty" json,yaml:"expirationSeconds,omitempty"`
}

// Validate validates this io k8s api storage v1beta1 token request
func (m *IoK8sAPIStorageV1beta1TokenRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAudience(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIStorageV1beta1TokenRequest) validateAudience(formats strfmt.Registry) error {

	if err := validate.Required("audience", "body", m.Audience); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this io k8s api storage v1beta1 token request based on context it is used
func (m *IoK8sAPIStorageV1beta1TokenRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIStorageV1beta1TokenRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIStorageV1beta1TokenRequest) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIStorageV1beta1TokenRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
